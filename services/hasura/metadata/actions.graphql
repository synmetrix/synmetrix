type Mutation {
  check_connection(
    datasource_id: uuid!
  ): CheckConnectionOutput
}

type Mutation {
  create_events(
    objects: [events_create_input!]!
  ): events_create_mutation_response!
}

type Mutation {
  create_team(
    name: String!
  ): CreateTeamOutput
}

type Mutation {
  export_data_models(
    branch_id: String
  ): ExportDataModelsOutput
}

type Query {
  fetch_dataset(
    exploration_id: uuid!
    offset: Int
    limit: Int
  ): FetchDatasetOutput
}

type Query {
  fetch_meta(
    datasource_id: uuid!
    branch_id: uuid
  ): SourceMetaOutput
}

type Query {
  fetch_tables(
    datasource_id: uuid!
  ): SourceTablesOutput
}

type Mutation {
  gen_dataschemas(
    datasource_id: uuid!
    branch_id: uuid!
    tables: [SourceTable!]!
    overwrite: Boolean
    format: String
  ): GenSourceSchemaOutput
}

type Mutation {
  gen_sql(
    exploration_id: uuid!
  ): GenSQLOutput
}

type Mutation {
  invite_team_member(
    email: String!
    teamId: uuid
    role: String
    magicLink: Boolean
  ): InviteTeamMemberOutput
}

type Query {
  pre_aggregation_preview(
    datasource_id: String!
    pre_aggregation_id: String!
    table_name: String!
  ): PreAggregationPreviewOutput
}

type Query {
  pre_aggregations(
    datasource_id: String!
  ): PreAggregationsOutput
}

type Mutation {
  run_query(
    datasource_id: uuid!
    branch_id: uuid
    query: String!
    limit: Int!
  ): RunSourceQueryOutput
}

type Mutation {
  send_test_alert(
    name: String
    deliveryType: String!
    deliveryConfig: json!
    explorationId: uuid
  ): SendTestAlertOutput
}

input SourceTable {
  name: String!
  schema: String!
}

input events_create_input {
  data: json!
  page_context: json
  device_context: json
  user: json!
}

type CheckSourceOutput {
  message: String
  code: String!
}

type GenSourceSchemaOutput {
  message: String
  code: String!
}

type SourceTablesOutput {
  schema: json
}

type SourceMetaOutput {
  cubes: json
}

type RunSourceQueryOutput {
  result: json
}

type CheckConnectionOutput {
  message: String
  code: String!
}

type FetchDatasetOutput {
  annotation: json
  data: json
  query: json
  progress: json
  hitLimit: Boolean
  slowQuery: Boolean
  external: Boolean
  dbType: String
  dataSource: String
  lastRefreshTime: String
}

type InviteTeamMemberOutput {
  code: String
  message: String
  memberId: uuid
}

type CreateTeamOutput {
  id: uuid
  name: String
}

type GenSQLOutput {
  result: json
}

type events_create_mutation_response {
  affected_rows: Int
}

type ExportDataModelsOutput {
  download_url: String!
}

type PreAggregationsOutput {
  data: json!
}

type PreAggregationPreviewOutput {
  data: json!
}

type SendTestAlertOutput {
  error: Boolean
  result: json
}

